class Solution 
{
    public:
	//Function to return a list containing the DFS traversal of the graph.
	
	void dfs(int node,vector<bool>& visited,vector<int>adj[],vector<int>& storeDfs)
	{
	   visited[node]=true;
	   storeDfs.push_back(node);
	   
	   
	   for(auto it:adj[node])
	   {
	       if(!visited[it])
	       {
	           dfs(it,visited,adj,storeDfs);
	       }
	   }
	}
	vector<int>dfsOfGraph(int V, vector<int> adj[])
	{
	    vector<int>storeDfs;
	     vector<bool>visited(V,false);
	     
	    // Code here
	    for(int i=0;i<V;i++)
	{
	    if(!visited[i]){
	    dfs(i,visited,adj,storeDfs);
	}
	}
	return storeDfs;
	   
	}
};
