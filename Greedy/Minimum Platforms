Approach-1(Brute Force)

int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	int platform_need=1;
    	int res=1;
    	
    	int i=1,j=0;
    	
    	for(int i=0;i<n;i++)
    	{
    	    platform_need=1;
    	    for(int j=i+1;j<n;j++)
    	    {
    	        if(arr[i]>=arr[j] && arr[i]<=dep[j] || arr[j]>=arr[i] && arr[j]<=dep[i])
    	        platform_need++;
    	    }
    	    res=max(res,platform_need);
    	}
    	return res;
    	
    }
    
    approach-2
    T.C-O(NlogN)
    S.C-O(1)
    
    int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	sort(arr,arr+n);
    	sort(dep,dep+n);
    	
    	int platform_need=1;
    	int res=1;
    	
    	int i=1,j=0;
    	
    	while(i<n && j<n)
    	{
    	    if(arr[i]<=dep[j]){
    	    platform_need++;
    	    i++;
    	}
    	    
    	    else if(arr[i]>dep[j]){
    	    {
    	        platform_need--;
    	        j++;
    	    }
    	    
    	    if(platform_need > res)
    	        res=platform_need;
    	}
    	return res;
    	
    }
};

    
    
